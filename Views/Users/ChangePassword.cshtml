@model RMC_Donation.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("ChangePassword", "Users", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container registration-container" style="width:420px;">
        <div class="registration-form-container">
            <h2 class="registration-heading">Change Password</h2>

            <div class="form-horizontal">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentPassword, "Current Password", htmlAttributes: new { @class = "control-label col-md-2 registration-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control registration-input" } })
                        @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger validation-message" })
                    </div>
                </div>

                <div class="form-group" style="margin-top:15px;">
                    @Html.LabelFor(model => model.NewPassword, "New Password", htmlAttributes: new { @class = "control-label col-md-2 registration-label" })
                    <div class="col-md-10">
                        <div class="input-group">
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control registration-input", @type = "password", @id = "registration-newPassword" } })
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary toggle-password" type="button">
                                    <i class="fa fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger validation-message" })
                    </div>
                </div>

                <div class="form-group" style="margin-top:15px;">
                    @Html.LabelFor(model => model.ConfirmNewPassword, "Confirm New Password", htmlAttributes: new { @class = "control-label col-md-2 registration-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control registration-input", @type = "password", @id = "registration-confirmNewPassword" } })
                        @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger validation-message" })
                    </div>
                </div>

                <div class="form-group" style="margin-top:10px;">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Change Password" class="btn btn-default registration-button" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $(".toggle-password").click(function () {
                var passwordInput = $(this).closest(".form-group").find("input[type='password']");
                var passwordFieldType = passwordInput.attr("type");

                if (passwordFieldType === "password") {
                    passwordInput.attr("type", "text");
                } else {
                    passwordInput.attr("type", "password");
                }

                $(this).toggleClass("glow");
            });
        });
    </script>
}