@model RMC_Donation.Models.item

@{
    ViewBag.Title = "Additems";
}

<h2>Additems</h2>


@using (Html.BeginForm("Additems", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.catagory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.catagory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.catagory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imageurl1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imageurl1" class="form-control" onchange="previewImage(this, 'imagePreview1')" />
                <img id="imagePreview1" src="" alt="Image Preview" style="max-width: 200px; max-height: 200px; display: none" />
                @Html.ValidationMessageFor(model => model.imageurl1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="additionalImageFields">
            <!-- Additional image fields will be added here -->
        </div>

        <button type="button" id="addImageField" class="btn btn-primary">Add Image</button>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Item" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            var maxImages = 4; // Maximum number of images allowed
            var currentImageCount = 1;

            // Function to add a new image upload field with a "Remove" button
            function addImageField() {
                if (currentImageCount < maxImages) {
                    currentImageCount++;
                    var newImageField = $('<div class="form-group">' +
                        '<label class="control-label col-md-2">Image URL ' + currentImageCount + '</label>' +
                        '<div class="col-md-8">' +
                        '<input type="file" name="imageurl' + currentImageCount + '" class="form-control" />' +
                        '<img id="imagePreview' + currentImageCount + '" src="" alt="Image Preview" style="max-width: 200px; max-height: 200px; display: none" />' +
                        '</div>' +
                        '<div class="col-md-2">' +
                        '<button type="button" class="btn btn-danger remove-image">Remove</button>' +
                        '</div>' +
                        '</div>');

                    // Add a change event handler to display image previews
                    newImageField.find('input[type="file"]').change(function () {
                        var preview = $(this).closest('.form-group').find('img');
                        displayImagePreview(this, preview);
                    });

                    // Add a click handler to the "Remove" button
                    newImageField.find('.remove-image').click(function () {
                        $(this).closest('.form-group').remove();
                        currentImageCount--;
                    });

                    $('#additionalImageFields').append(newImageField);
                }
            }

            // Function to display image previews
            function displayImagePreview(input, preview) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        preview.attr('src', e.target.result);
                        preview.css('display', 'block'); // Show the preview
                    };

                    reader.readAsDataURL(input.files[0]);
                } else {
                    // No file selected or browser doesn't support FileReader
                    preview.attr('src', '');
                    preview.css('display', 'none'); // Hide the empty preview
                }
            }

            // Handle click on "Add Image" button
            $('#addImageField').click(function () {
                addImageField();
            });
        });
    </script>
    <script>
        function previewImage(input, imageId) {
            var imagePreview = document.getElementById(imageId);
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
